#!/bin/sh
echo installing gunicorn
pip install gunicorn
source ezinnit/ezinnit.config
echo installing uvicorn
pip install uvicorn

echo creating procfile for fastAPI app
echo "web: gunicorn -k uvicorn.workers.UvicornWorker main:app" > Procfile
echo overwriting main.py...
echo "from fastapi import FastAPI
import os

\"\"\"
ezinnit helped build this main.py file
Synctivate Custom Software
https://synctivate.com
John Hewitt
https://github.com/johnhewi
\"\"\"

app = FastAPI()

env = 'PRODUCTION'
if os.getenv('ENV') == 'DEVELOPMENT':
    env = 'DEVELOPMENT'

@app.get(\"/\")
async def root():
    return {\"message\": \"$appname is working. By the way, it was deployed with ezinnit from https://synctivate.com\",
        \"ENV\": env}


@app.get(\"/hello/{name}\")
async def say_hello(name: str):
    return {\"message\": f\"Hi {name}, I'm $appname! Have you heard of ezinnit from https://synctivate.com?\",
        \"ENV\": env}" > main.py

echo creating ezrun...
echo "#!/bin/sh
echo finding a port...
openportfound=false
portcheck=8000
while [ \$openportfound = false ] && [ \$portcheck -lt 65537 ]
do
    if [ \$portcheck == 65537 ]
    then
        portcheck=1025
    fi

    stringlength=\$(lsof -Pi :\"\$portcheck\" -sTCP:LISTEN)

    if [ \${#stringlength} = 0 ]
    then
        openportfound=true
        openport=\$portcheck
        echo found open port: \$openport
    else
        if [ \$portcheck == 7999 ]
            then
                echo \"no open ports found\"
                openport=8000
                break
            fi
        portcheck=\$((portcheck+1))
    fi
done
if [ \$openportfound = true ]
then
    echo starting app \in local dev environment on port \$openport...
    source venv/bin/activate && export ENV=DEVELOPMENT && uvicorn main:app --host 127.0.0.1 --port \$openport
else
    echo attempting to start app \in local dev environment with fastApi defaults...
    source venv/bin/activate && export ENV=DEVELOPMENT && uvicorn main:app
fi" > ezrun
